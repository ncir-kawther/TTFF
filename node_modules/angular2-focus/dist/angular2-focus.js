import { Directive, ElementRef, Input, NgModule } from '@angular/core';

class FocusDirective {
    /**
     * @param {?} $element
     */
    constructor($element) {
        this.hasFocused = false;
        this.element = $element.nativeElement;
    }
    /**
     * @return {?}
     */
    ngAfterContentChecked() {
        this.giveFocus();
    }
    /**
     * @return {?}
     */
    giveFocus() {
        if (this.focus && !this.hasFocused) {
            this.element.focus();
            this.hasFocused = true;
        }
    }
}
FocusDirective.decorators = [
    { type: Directive, args: [{
                selector: '[focus]'
            },] },
];
/**
 * @nocollapse
 */
FocusDirective.ctorParameters = () => [
    { type: ElementRef, },
];
FocusDirective.propDecorators = {
    'focus': [{ type: Input },],
};

class FocusModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: FocusModule
        };
    }
}
FocusModule.decorators = [
    { type: NgModule, args: [{
                declarations: [FocusDirective],
                exports: [FocusDirective]
            },] },
];
/**
 * @nocollapse
 */
FocusModule.ctorParameters = () => [];

/**
 * Generated bundle index. Do not edit.
 */

export { FocusModule, FocusDirective as Éµa };
//# sourceMappingURL=angular2-focus.js.map
