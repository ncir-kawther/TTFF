(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :
	(factory((global['angular2-focus'] = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

var FocusDirective = /** @class */ (function () {
    /**
     * @param {?} $element
     */
    function FocusDirective($element) {
        this.hasFocused = false;
        this.element = $element.nativeElement;
    }
    /**
     * @return {?}
     */
    FocusDirective.prototype.ngAfterContentChecked = function () {
        this.giveFocus();
    };
    /**
     * @return {?}
     */
    FocusDirective.prototype.giveFocus = function () {
        if (this.focus && !this.hasFocused) {
            this.element.focus();
            this.hasFocused = true;
        }
    };
    return FocusDirective;
}());
FocusDirective.decorators = [
    { type: core.Directive, args: [{
                selector: '[focus]'
            },] },
];
/**
 * @nocollapse
 */
FocusDirective.ctorParameters = function () { return [
    { type: core.ElementRef, },
]; };
FocusDirective.propDecorators = {
    'focus': [{ type: core.Input },],
};
var FocusModule = /** @class */ (function () {
    function FocusModule() {
    }
    /**
     * @return {?}
     */
    FocusModule.forRoot = function () {
        return {
            ngModule: FocusModule
        };
    };
    return FocusModule;
}());
FocusModule.decorators = [
    { type: core.NgModule, args: [{
                declarations: [FocusDirective],
                exports: [FocusDirective]
            },] },
];
/**
 * @nocollapse
 */
FocusModule.ctorParameters = function () { return []; };

exports.FocusModule = FocusModule;
exports.Éµa = FocusDirective;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular2-focus.umd.js.map
