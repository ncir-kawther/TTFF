{"version":3,"file":"angular2-focus.umd.min.js","sources":["~/angular2-focus/src/focus.directive.ts","~/angular2-focus/src/focus.module.ts"],"sourcesContent":["import { Directive, ElementRef, Input } from '@angular/core';\nexport class FocusDirective {\n   focus: boolean;\nprivate element: HTMLElement;\nprivate hasFocused = false;\n/**\n * @param {?} $element\n */\nconstructor($element: ElementRef) {\n    this.element = $element.nativeElement;\n  }\n/**\n * @return {?}\n */\nngAfterContentChecked() {\n    this.giveFocus();\n  }\n/**\n * @return {?}\n */\ngiveFocus() {\n    if (this.focus && !this.hasFocused) {\n      this.element.focus();\n      this.hasFocused = true;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[focus]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'focus': [{ type: Input },],\n};\n}\n\nfunction FocusDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusDirective.ctorParameters;\n/** @type {?} */\nFocusDirective.propDecorators;\n/** @type {?} */\nFocusDirective.prototype.focus;\n/** @type {?} */\nFocusDirective.prototype.element;\n/** @type {?} */\nFocusDirective.prototype.hasFocused;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FocusDirective } from './focus.directive';\nexport class FocusModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n    return {\n      ngModule: FocusModule\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [FocusDirective],\n  exports: [FocusDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FocusModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["FocusDirective","$element","this","hasFocused","element","nativeElement","prototype","ngAfterContentChecked","giveFocus","focus","decorators","type","Directive","args","selector","ctorParameters","ElementRef","propDecorators","Input","FocusModule","forRoot","ngModule","NgModule","declarations","exports"],"mappings":"yPACA,IAAAA,EAAA,WAOA,SAAAA,EAAGC,GAFOC,KAAVC,YAAuB,EAGnBD,KAAKE,QAAUH,EAASI,qBAK5BL,EAAAM,UAAAC,sBAAA,WACIL,KAFKM,aAOTR,EAAAM,UAAAE,UAAA,WACQN,KAJKO,QAASP,KAAMC,aAKtBD,KAJKE,QAAQK,QAKbP,KAJKC,YAAa,MAlBxB,GAqBOH,EAAPU,aACEC,KAAMC,EAAAA,UAAWC,OAKjBC,SAJU,cAIXd,EAADe,eAAC,WAAA,QAOAJ,KAAMK,EAAAA,cAJAhB,EAAPiB,gBAOAR,QANYE,KAAMO,EAAAA,SC9BlB,IAAAC,EAAA,WAAA,SAAAA,YAGGA,EAAHC,QACA,WACI,OACEC,SADUF,MALhB,GAQOA,EAAPT,aACEC,KAAMW,EAAAA,SAAUT,OAEhBU,cADcvB,GAEdwB,SADSxB,OAIVmB,EAADJ,eAAC,WAAA"}
