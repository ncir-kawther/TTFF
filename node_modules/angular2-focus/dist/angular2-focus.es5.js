import { Directive, ElementRef, Input, NgModule } from '@angular/core';
var FocusDirective = /** @class */ (function () {
    /**
     * @param {?} $element
     */
    function FocusDirective($element) {
        this.hasFocused = false;
        this.element = $element.nativeElement;
    }
    /**
     * @return {?}
     */
    FocusDirective.prototype.ngAfterContentChecked = function () {
        this.giveFocus();
    };
    /**
     * @return {?}
     */
    FocusDirective.prototype.giveFocus = function () {
        if (this.focus && !this.hasFocused) {
            this.element.focus();
            this.hasFocused = true;
        }
    };
    return FocusDirective;
}());
FocusDirective.decorators = [
    { type: Directive, args: [{
                selector: '[focus]'
            },] },
];
/**
 * @nocollapse
 */
FocusDirective.ctorParameters = function () { return [
    { type: ElementRef, },
]; };
FocusDirective.propDecorators = {
    'focus': [{ type: Input },],
};
var FocusModule = /** @class */ (function () {
    function FocusModule() {
    }
    /**
     * @return {?}
     */
    FocusModule.forRoot = function () {
        return {
            ngModule: FocusModule
        };
    };
    return FocusModule;
}());
FocusModule.decorators = [
    { type: NgModule, args: [{
                declarations: [FocusDirective],
                exports: [FocusDirective]
            },] },
];
/**
 * @nocollapse
 */
FocusModule.ctorParameters = function () { return []; };
/**
 * Generated bundle index. Do not edit.
 */
export { FocusModule, FocusDirective as Éµa };
//# sourceMappingURL=angular2-focus.es5.js.map
